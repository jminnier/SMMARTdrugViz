mec_auc=melt(aucErlo_filt, id.vars="cell_line", measure=c("CCLE","GDSC1000","GCSI","FIMM","CTRPV2"))
erlo_scatter <- ggplot(mec_auc, aes(x=cell_line, y=value)) +
geom_point(aes(colour=factor(variable))) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
panel.background = element_rect(fill="white", colour = "black"),
axis.text=element_text(colour="black"),
legend.title = element_blank(),
panel.grid.major.x = element_line( size=.1, color="gray" ) ) +
scale_colour_brewer(palette = "Dark2") +
labs(y="AAC", x="cell lines\nordered by increasing DUOX1 expression") +
ylim(0, 0.3)
erlo_scatter
head(duoxexp_filt)
head(mel)
duox_afat_heatmap
head(mtcars)
p <- ggplot(mtcars, aes(wt, mpg))
library(ggplot1)
library(ggplot2)
p <- ggplot(mtcars, aes(wt, mpg))
p
getwd()
library(data.table)
library(ggplot2)
library(PharmacoGx)
gray_samplist = fread("/Volumes/exacloud/CompBio/BCCL/SraRunTable.txt")
library(data.table)
library(ggplot2)
library(PharmacoGx)
processSummSensPset <- function(df) {
df2 = as.data.frame(t(data.frame(df)))
df2$cell_line = gsub("—|-| |_|\\.","", rownames(df2))
print(paste0("duplicated rows ", df2[duplicated(df2$cell_line),]))
df2[-duplicated(df2$cell_line),]
return(df2)
}
medianWithoutNA<-function(x) {
median(x[which(!is.na(x))])
}
library(data.table)
library(ggplot2)
library(PharmacoGx)
processSummSensPset <- function(df) {
df2 = as.data.frame(t(data.frame(df)))
df2$cell_line = gsub("—|-| |_|\\.","", rownames(df2))
print(paste0("duplicated rows ", df2[duplicated(df2$cell_line),]))
df2[-duplicated(df2$cell_line),]
return(df2)
}
medianWithoutNA<-function(x) {
median(x[which(!is.na(x))])
}
uhn_samplelist=fread("/Volumes/exacloud/CompBio/UHN/SRR_cellline_GSM.tsv", header=F)
uhn_samplelist=fread("/Volumes/exacloud/CompBio/UHN/SRR_cellline_GSM.tsv", header=F)
kallisto_uhn=fread("/Volumes/exacloud/CompBio/UHN_output/output/DUOX_kallisto.txt", col.names = c("target_id","length","eff_length","est_counts","tpm","SRA_ID"))
uhn_samplelist=fread("/Volumes/exacloud/CompBio/UHN/SRR_cellline_GSM.tsv", header=F)
data("GDSCsmall")
data("CCLEsmall")
commonGenes <- intersect(fNames(GDSCsmall, "rna"), fNames(CCLEsmall,"rna"))
common <- intersectPSet(list('CCLE'=CCLEsmall,'GDSC'=GDSCsmall),intersectOn=c("cell.lines", "drugs"), strictIntersect=TRUE)
GDSC.auc <- summarizeSensitivityProfiles(
pSet=common$GDSC,
sensitivity.measure='auc_published',
summary.stat="median",
verbose=FALSE)
CCLE.auc <- summarizeSensitivityProfiles(
pSet=common$CCLE,
sensitivity.measure='auc_published',
summary.stat="median",
verbose=FALSE)
GDSC.ic50 <- summarizeSensitivityProfiles(
pSet=common$GDSC,
sensitivity.measure='ic50_published',
summary.stat="median",
verbose=FALSE)
CCLE.ic50 <- summarizeSensitivityProfiles(
pSet=common$CCLE,
sensitivity.measure='ic50_published',
summary.stat="median",
verbose=FALSE)
GDSCexpression <- summarizeMolecularProfiles(common$GDSC,
cellNames(common$GDSC),
mDataType="rna",
features=commonGenes,
verbose=FALSE)
CCLEexpression <- summarizeMolecularProfiles(common$CCLE,
cellNames(common$CCLE),
mDataType="rna",
features=commonGenes,
verbose=FALSE)
library(data.table)
library(ggplot2)
library(PharmacoGx)
data("GDSCsmall")
data("CCLEsmall")
commonGenes <- intersect(fNames(GDSCsmall, "rna"), fNames(CCLEsmall,"rna"))
common <- intersectPSet(list('CCLE'=CCLEsmall,'GDSC'=GDSCsmall),intersectOn=c("cell.lines", "drugs"), strictIntersect=TRUE)
GDSC.auc <- summarizeSensitivityProfiles(
pSet=common$GDSC,
sensitivity.measure='auc_published',
summary.stat="median",
verbose=FALSE)
CCLE.auc <- summarizeSensitivityProfiles(
pSet=common$CCLE,
sensitivity.measure='auc_published',
summary.stat="median",
verbose=FALSE)
GDSC.ic50 <- summarizeSensitivityProfiles(
pSet=common$GDSC,
sensitivity.measure='ic50_published',
summary.stat="median",
verbose=FALSE)
CCLE.ic50 <- summarizeSensitivityProfiles(
pSet=common$CCLE,
sensitivity.measure='ic50_published',
summary.stat="median",
verbose=FALSE)
GDSCexpression <- summarizeMolecularProfiles(common$GDSC,
cellNames(common$GDSC),
mDataType="rna",
features=commonGenes,
verbose=FALSE)
CCLEexpression <- summarizeMolecularProfiles(common$CCLE,
cellNames(common$CCLE),
mDataType="rna",
features=commonGenes,
verbose=FALSE)
CCLE.auc
dim(CCLE.auc)
availablePSets()
pharm_ccle2013=downloadPSet("CCLE_2013")
pharm_ccle = downloadPSet("CCLE")
pharm_gdsc = downloadPSet("GDSC")
pharm_gdsc2013 = downloadPSet("GDSC_2013")
pharm_gdsc1000 = downloadPSet("GDSC1000")
pharm_gcsi=downloadPSet("gCSI")
pharm_fimm=downloadPSet("FIMM")
pharm_ctrpv2=downloadPSet("CTRPv2")
pharm_ccle2013_reauc = summarizeSensitivityProfiles(pSet = pharm_ccle2013, sensitivity.measure = 'auc_published', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_ccle_reauc = summarizeSensitivityProfiles(pSet = pharm_ccle, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_gdsc_reauc = summarizeSensitivityProfiles(pSet = pharm_gdsc, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_gdsc2013_reauc = summarizeSensitivityProfiles(pSet = pharm_gdsc2013, sensitivity.measure = 'auc_published', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_gdsc1000_reauc = summarizeSensitivityProfiles(pSet = pharm_gdsc1000, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_gcsi_reauc = summarizeSensitivityProfiles(pSet = pharm_gcsi, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_fim_reauc = summarizeSensitivityProfiles(pSet = pharm_fimm, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
#ctrp will take a lifetime to summarize. beware.
pharm_ctrp_reauc = summarizeSensitivityProfiles(pSet = pharm_ctrpv2, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
ccle_auc = processSummSensPset(pharm_ccle_reauc)
gdsc_auc = processSummSensPset(pharm_gdsc_reauc)
gdsc1000_auc = processSummSensPset(pharm_gdsc1000_reauc)
gcsi_auc = processSummSensPset(pharm_gcsi_reauc)
fimm_auc = processSummSensPset(pharm_fim_reauc)
ctrpv2_auc = processSummSensPset(pharm_ctrp_reauc)
auc_erlo = Reduce(function(x, y) merge(x, y, by="cell_line", all=TRUE), list(ccle_auc[,c(1,3)], gdsc_auc[,c(1,3)], gdsc1000_auc[,c(1,3)], gcsi_auc[,c(1,3)], fimm_auc[,c(1,3)], ctrpv2_auc[,c(1,3)]))
colnames(auc_erlo) = c("cell_line", "CCLE", "GDSC","GDSC1000", "GCSI", "FIMM", "CTRPV2")
auc_afat = Reduce(function(x, y) merge(x, y, by="cell_line", all=TRUE), list(ccle_auc[,c(2,3)], gdsc_auc[,c(2,3)], gdsc1000_auc[,c(2,3)], gcsi_auc[,c(2,3)], fimm_auc[,c(2,3)], ctrpv2_auc[,c(2,3)]))
colnames(auc_afat) = c("cell_line", "CCLE", "GDSC","GDSC1000", "GCSI", "FIMM", "CTRPV2")
processSummSensPset <- function(df) {
df2 = as.data.frame(t(data.frame(df)))
df2$cell_line = gsub("—|-| |_|\\.","", rownames(df2))
print(paste0("duplicated rows ", df2[duplicated(df2$cell_line),]))
df2[-duplicated(df2$cell_line),]
return(df2)
}
head(pharm_ccle2013_reauc)
ccle_auc = processSummSensPset(pharm_ccle_reauc)
gdsc_auc = processSummSensPset(pharm_gdsc_reauc)
gdsc1000_auc = processSummSensPset(pharm_gdsc1000_reauc)
gcsi_auc = processSummSensPset(pharm_gcsi_reauc)
fimm_auc = processSummSensPset(pharm_fim_reauc)
ctrpv2_auc = processSummSensPset(pharm_ctrp_reauc)
head(ccle_auc)
common <- intersectPSet(list('CCLE'=pharm_ccle,'GDSC'=pharm_gdsc),intersectOn=c("cell.lines", "drugs"), strictIntersect=TRUE)
common
common$CCLE
fnames(pharm_ccle)
fnames(pharm_ccle, "rna")
GDSCdata("GDSCsmall")
data("GDSCsmall")
fnames(GDSCsmall, "rna")
commonGenes <- intersect(fNames(GDSCsmall, "rna"), fNames(CCLEsmall,"rna"))
commonGenes
fNames(GDSCsmall, "rna")
>fNames
?fNames
library(data.table)
library(ggplot2)
library(PharmacoGx)
processSummSensPset <- function(df) {
df2 = as.data.frame(t(data.frame(df)))
df2$cell_line = gsub("—|-| |_|\\.","", rownames(df2))
print(paste0("duplicated rows ", df2[duplicated(df2$cell_line),]))
df2[-duplicated(df2$cell_line),]
return(df2)
}
medianWithoutNA<-function(x) {
median(x[which(!is.na(x))])
}
uhn_samplelist=fread("/Volumes/exacloud/CompBio/UHN/SRR_cellline_GSM.tsv", header=F)
sgray_samplist = fread("/Volumes/exacloud/CompBio/BCCL/SraRunTable.txt")
exp89=Reduce(function(x, y) merge(x, y, by="cellline", all=TRUE), list(gray89exp, uhn89exp, ccle89exp))
shiny::runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
duoxexp_filt = exp89[exp89$cellline %in% auc_erlo$cell_line,]
duox_order = duoxexp_filt$cellline[c(order(duoxexp_filt$median_duox))]
#filter egfr and sensitivities inside duox list
egfrexp_filt = expEgfr[expEgfr$cellline %in% duox_order,]
egfr_order = egfrexp_filt$cellline[c(order(egfrexp_filt$median_egfr))]
aucerlo_study = auc_erlo[auc_erlo$cell_line %in% duox_order,]
head(aucerlo_study)
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
x= c("CCLE","GDSC1000","GCSI","FIMM","CTRPV2")
aucErlo_filt = aucerlo_study[,append(c("cell_line"), x)]
aucErlo_filt
medianSens=apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA)
medianSens
c(order(medianSens))
aucErlo_filt$cell_line[c(order(medianSens))]
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
aucerlo_study[,append(c("cell_line"), input$celllines)]
aucerlo_study = auc_erlo[auc_erlo$cell_line %in% duox_order,]
aucerlo_study[,append(c("cell_line"), x)]
medianWithoutNA<-function(x) {
median(x[which(!is.na(x))])}
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA)
order(medianSens)
order(apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA))
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
head(auc_erlo)
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
aucErlo_filt[,c(2:ncol(aucErlo_filt))]
apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA)
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
colnames(auc_erlo)
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
medianSens = apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA)
order(medianSens)
sort(median())
sort(medianSens
)
medianSens
min(medianSens)
min(medianSens, na.rm = T)
medianSens(order(medianSens))
medianSens[order(medianSens)]
order(medianSens)[9]
length(medianSens)
order(medianSens)
medianSens
which(medianSens==max(medianSens, na.rm = T))
medianSens[9]
head(medianSens)
head(auc_erlo)
head(aucErlo_filt)
order(medianSens)
apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA))
apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA)
sort(medianSens)
order(medianSens)
medianSens[order(medianSens)]
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
aucErlo_filt[order(medianSens),]
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
shiny::runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
duoxexp_filt = exp89[exp89$cellline %in% auc_erlo$cell_line,]
duox_order = duoxexp_filt$cellline[c(order(duoxexp_filt$median_duox))]
#filter egfr and sensitivities inside duox list
egfrexp_filt = expEgfr[expEgfr$cellline %in% duox_order,]
egfr_order = egfrexp_filt$cellline[c(order(egfrexp_filt$median_egfr))]
aucerlo_study = auc_erlo[auc_erlo$cell_line %in% duox_order,]
head(aucerlo_study)
x=c("CCLE","GDSC","GDSC1000","GCSI","FIMM","CTRPV2")
aucErlo_filt = aucerlo_study[,append(c("cell_line"), x)]
medianSens = list(apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA))
medianSens
medianSens = (apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA))
medianSens
medianSens = c(apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA))
medianSens
medianSens = c(apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA))a
medianSens = c(apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA))
class(median())
class(medianSens
)
order(medianSens)
class(aucErlo_filt[order(medianSens),])
(aucErlo_filt[order(medianSens),])
(aucErlo_filt$cell_line[order(medianSens),])
(aucErlo_filt$cell_line[order(medianSens)])
list(aucErlo_filt$cell_line[order(medianSens)])
c(aucErlo_filt$cell_line[order(medianSens)])
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
medianSens = list(apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA))
medianSens
medianSens = apply(aucErlo_filt[,c(2:ncol(aucErlo_filt))], 1, medianWithoutNA)
medianSens
c(aucErlo_filt$cell_line[order(medianSens)])
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
class(egfr_order)
head(aucerlo_study)
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
aucerlo_study = auc_erlo[auc_erlo$cell_line %in% duox_order,]
med=apply(aucErlo_filt[,c(2:ncol(aucerlo_study))], 1, medianWithoutNA)
sens_order= aucerlo_study$cell_line[c(order(med))]
sens_order
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
?plotOutput
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
runApp('Workspace/DrugPrioritization/drugViz/drugViz')
install.packages('rsconnect')
library(data.table)
library(ggplot2)
library(PharmacoGx)
#homogenizes cell line names and removes duplicates
processSummSensPset <- function(df) {
df2 = as.data.frame(t(data.frame(df)))
df2$cell_line = gsub("—|-| |_|\\.","", rownames(df2))
print(paste0("duplicated rows ", df2[duplicated(df2$cell_line),]))
df2[-duplicated(df2$cell_line),]
return(df2)
}
availablePSets()
pharm_ccle2013=downloadPSet("CCLE_2013")
pharm_ccle = downloadPSet("CCLE")
processSummSensPset <- function(df) {
df2 = as.data.frame(t(data.frame(df)))
df2$cell_line = gsub("—|-| |_|\\.","", rownames(df2))
print(paste0("duplicated rows ", df2[duplicated(df2$cell_line),]))
df2[-duplicated(df2$cell_line),]
return(df2)
}
medianWithoutNA<-function(x) {
median(x[which(!is.na(x))])
}
uhn_samplelist=fread("/Volumes/exacloud/CompBio/UHN/SRR_cellline_GSM.tsv", header=F)
uhn_samplelist=fread("/Volumes/exacloud/CompBio/UHN/SRR_cellline_GSM.tsv", header=F)
kallisto_uhn=fread("/Volumes/exacloud/CompBio/UHN/DUOX_kallisto.txt", col.names = c("target_id","length","eff_length","est_counts","tpm","SRA_ID"))
kuid=sapply(strsplit(kallisto_uhn$target_id, split="[|]"), "[", 1)
exp_uhn= cbind(merge(kallisto_uhn, uhn_samplelist[,c(1,2)], by.x="SRA_ID", by.y="V1")[,c("V2", "tpm")], transcriptid=kuid)
uhn21exp = exp_uhn[transcriptid=="ENST00000321429.8", c("V2", "tpm")]
uhn89exp = exp_uhn[transcriptid=="ENST00000389037.7",c("V2", "tpm")]
colnames(uhn89exp) = c("cellline", "tpm_value")
gray_samplist = fread("/Volumes/exacloud/CompBio/BCCL/SraRunTable.txt")
kallisto_gray =fread("/Volumes/exacloud/CompBio/BCCL/output_kallisto/DUOX_kallisto.txt", col.names = c("target_id","length","eff_length","est_counts","tpm","SRA_ID"))
kgid=sapply(strsplit(kallisto_gray$target_id, split="[|]"), "[", 1)
#combines cell names to SRR names, and split column with transcript name rbind
exp_gray= cbind(merge(kallisto_gray, gray_samplist[,c(8,11)], by.x="SRA_ID", by.y="Run_s")[,c("tpm", "cell_line_s")], transcriptid=kgid)
gray21 = exp_gray[transcriptid=="ENST00000321429.8", c("cell_line_s", "tpm")]
gray89 = exp_gray[transcriptid=="ENST00000389037.7",c("cell_line_s", "tpm")]
#duplicated samples both expression equals zero
gray21exp=gray21[-(which(gray21$cell_line_s=="UACC812")[1]),]
gray89exp=gray89[-(which(gray89$cell_line_s=="UACC812")[1]),]
colnames(gray89exp) = c("cellline", "tpm_value")
ccle21 = fread("/Users/patterja/Workspace/ccle_tcga_kallisto/CCLE_ENST00000321429.csv")
ccle89 = fread("/Users/patterja/Workspace/ccle_tcga_kallisto/CCLE_ENST00000389037.csv")
tcga21 = fread("/Users/patterja/Workspace/ccle_tcga_kallisto/TCGA_ENST0000032149.csv")
tcga89 = fread("/Users/patterja/Workspace/ccle_tcga_kallisto/TCGA_ENST00000389037.csv")
ccle21_brca = ccle21[cancer_type=="BRCA",c("ccle_name","tpm_value")]
ccle89_brca = ccle89[cancer_type=="BRCA",c("ccle_name","tpm_value")]
tcga21_brca = tcga21[cancer_type=="BRCA",c("AliquotBarcode","tpm_value")]
tcga89_brca = tcga89[cancer_type=="BRCA",c("AliquotBarcode","tpm_value")]
ccle21_brca$ccle_name = sapply(strsplit(ccle21_brca$ccle_name, split="[.]"), "[",2)
ccle89_brca$ccle_name = sapply(strsplit(ccle89_brca$ccle_name, split="[.]"), "[",2)
ccle21_brca$cellline = gsub("—|-| |_","", ccle21_brca$ccle_name)
ccle89_brca$cellline = gsub("—|-| |_","", ccle89_brca$ccle_name)
ccle21exp=ccle21_brca[,c("cellline", "tpm_value")]
ccle89exp=ccle89_brca[,c("cellline", "tpm_value")]
exp89=Reduce(function(x, y) merge(x, y, by="cellline", all=TRUE), list(gray89exp, uhn89exp, ccle89exp))
colnames(exp89)= c("cellline", "GRAY", "UHN", "CCLE")
exp89$median_duox = apply(exp89[,c(2:4)], 1, medianWithoutNA)
gray_samplist = fread("/Volumes/exacloud/CompBio/BCCL/SraRunTable.txt")
kallisto_gray_egfr =fread("/Volumes/exacloud/CompBio/BCCL/output_kallisto/EGFR_kallisto.txt", col.names = c("target_id","length","eff_length","est_counts","tpm","SRA_ID"))
kgid=sapply(strsplit(kallisto_gray_egfr$target_id, split="[|]"), "[", 1)
#combines cell names to SRR names, and split column with transcript name rbind
exp_gray= cbind(merge(kallisto_gray_egfr, gray_samplist[,c(8,11)], by.x="SRA_ID", by.y="Run_s")[,c("tpm", "cell_line_s")], transcriptid=kgid)[,c(2,1)]
grayEgfr_exp = exp_gray[, lapply(.SD, sum, na.rm=TRUE), by = cell_line_s]
colnames(grayEgfr_exp) = c("cellline", "tpm_value")
uhn_samplelist=fread("/Volumes/exacloud/CompBio/UHN/SRR_cellline_GSM.tsv", header=F)
kallisto_uhn=fread("/Volumes/exacloud/CompBio/UHN/EGFR_kallisto.txt", col.names = c("target_id","length","eff_length","est_counts","tpm","SRA_ID"))
kuid=sapply(strsplit(kallisto_uhn$target_id, split="[|]"), "[", 1)
exp_uhn= cbind(merge(kallisto_uhn, uhn_samplelist[,c(1,2)], by.x="SRA_ID", by.y="V1")[,c("V2", "tpm")], transcriptid=kuid)[,c(2,1)]
uhnEgfr_exp = exp_uhn[, lapply(.SD, sum, na.rm=TRUE), by = V2]
colnames(uhnEgfr_exp) = c("cellline", "tpm_value")
ccle_egfr=fread("/Users/patterja/Workspace/ccle_tcga_kallisto/EGFR_CCLE.csv")
#Filter for BRCA and coding EGFR
#clean up ccle_name
ccle_egfr$ccle_name=sapply(strsplit(ccle_egfr$ccle_name, split="[.]"), "[",2)
ccle_egfr$cellline=gsub("—|-| |_","", ccle_egfr$ccle_name)
#Filter for BRCA
#Filter coding EGFR
#select columns to sum
#sum by cell line name
ccleEgfr_exp = ccle_egfr[cancer_type =="BRCA",][!grepl("ENST00000463948|ENST00000459688|ENST00000485503",transcript_id),][,c("cellline","tpm_value")][, lapply(.SD, sum, na.rm=TRUE), by = cellline]
expEgfr=Reduce(function(x, y) merge(x, y, by="cellline", all=TRUE), list(grayEgfr_exp, uhnEgfr_exp, ccleEgfr_exp))
colnames(expEgfr)= c("cellline", "GRAY", "UHN", "CCLE")
expEgfr$median_egfr = apply(expEgfr[,c(2:4)], 1, medianWithoutNA)
availablePSets()
pharm_ccle2013=downloadPSet("CCLE_2013")
pharm_ccle = downloadPSet("CCLE")
pharm_ccle = downloadPSet("CCLE")
availablePSets()
pharm_ccle2013=downloadPSet("CCLE_2013")
pharm_ccle = downloadPSet("CCLE")
pharm_ccle = downloadPSet("CCLE")
availablePSets()
pharm_ccle2013=downloadPSet("CCLE_2013")
pharm_ccle = downloadPSet("CCLE")
pharm_ccle = downloadPSet("CCLE")
pharm_ccle
pharm_gdsc = downloadPSet("GDSC")
pharm_gdsc2013 = downloadPSet("GDSC_2013")
pharm_gdsc1000 = downloadPSet("GDSC1000")
pharm_gcsi=downloadPSet("gCSI")
pharm_fimm=downloadPSet("FIMM")
pharm_ctrpv2=downloadPSet("CTRPv2")
pharm_ccle2013_reauc = summarizeSensitivityProfiles(pSet = pharm_ccle2013, sensitivity.measure = 'auc_published', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_ccle_reauc = summarizeSensitivityProfiles(pSet = pharm_ccle, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_gdsc_reauc = summarizeSensitivityProfiles(pSet = pharm_gdsc, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_gdsc2013_reauc = summarizeSensitivityProfiles(pSet = pharm_gdsc2013, sensitivity.measure = 'auc_published', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_gdsc1000_reauc = summarizeSensitivityProfiles(pSet = pharm_gdsc1000, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_gcsi_reauc = summarizeSensitivityProfiles(pSet = pharm_gcsi, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
pharm_fim_reauc = summarizeSensitivityProfiles(pSet = pharm_fimm, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
#ctrp will take a lifetime to summarize. beware.
pharm_ctrp_reauc = summarizeSensitivityProfiles(pSet = pharm_ctrpv2, sensitivity.measure = 'auc_recomputed', summary.stat = "median", verbose=T, drugs=c("Erlotinib", "Afatinib"))
ccle_auc = processSummSensPset(pharm_ccle_reauc)
gdsc_auc = processSummSensPset(pharm_gdsc_reauc)
gdsc1000_auc = processSummSensPset(pharm_gdsc1000_reauc)
gcsi_auc = processSummSensPset(pharm_gcsi_reauc)
fimm_auc = processSummSensPset(pharm_fim_reauc)
ctrpv2_auc = processSummSensPset(pharm_ctrp_reauc)
auc_erlo = Reduce(function(x, y) merge(x, y, by="cell_line", all=TRUE), list(ccle_auc[,c(1,3)], gdsc_auc[,c(1,3)], gdsc1000_auc[,c(1,3)], gcsi_auc[,c(1,3)], fimm_auc[,c(1,3)], ctrpv2_auc[,c(1,3)]))
colnames(auc_erlo) = c("cell_line", "CCLE", "GDSC","GDSC1000", "GCSI", "FIMM", "CTRPV2")
auc_afat = Reduce(function(x, y) merge(x, y, by="cell_line", all=TRUE), list(ccle_auc[,c(2,3)], gdsc_auc[,c(2,3)], gdsc1000_auc[,c(2,3)], gcsi_auc[,c(2,3)], fimm_auc[,c(2,3)], ctrpv2_auc[,c(2,3)]))
colnames(auc_afat) = c("cell_line", "CCLE", "GDSC","GDSC1000", "GCSI", "FIMM", "CTRPV2")
head(auc_afat)
head(auc_erlo)
head)exp90
head(89)
head(exp89  )
head(expEgfr)
auc_erlo = Reduce(function(x, y) merge(x, y, by="cell_line", all=TRUE), list(ccle_auc[,c(1,3)], gdsc_auc[,c(1,3)], gdsc1000_auc[,c(1,3)], gcsi_auc[,c(1,3)], fimm_auc[,c(1,3)], ctrpv2_auc[,c(1,3)]))
colnames(auc_erlo) = c("cell_line", "CCLE", "GDSC","GDSC1000", "GCSI", "FIMM", "CTRPV2")
save(auc_erlo, file="/Users/patterja/Workspace/DrugPrioritization/SMMARTdrugViz/drugViz/data/auc_erlo.Rda")
save(exp89, file="/Users/patterja/Workspace/DrugPrioritization/SMMARTdrugViz/drugViz/data/exp89.Rda")
save(expEgfr, file="/Users/patterja/Workspace/DrugPrioritization/SMMARTdrugViz/drugViz/data/expEgfr.Rda")
save(auc_erlo, file="/Users/patterja/Workspace/DrugPrioritization/SMMARTdrugViz/data/auc_erlo.Rda")
save(exp89, file="/Users/patterja/Workspace/DrugPrioritization/SMMARTdrugViz/data/exp89.Rda")
save(expEgfr, file="/Users/patterja/Workspace/DrugPrioritization/SMMARTdrugViz/data/expEgfr.Rda")
install.packages("rsconnect")
http://docs.rstudio.com/shinyapps.io/getting-started.html#deploying-applications
rsconnect::setAccountInfo(name='patterja-brite', token='771320991FBA0903A45EB6AA5B1BDBA1', secret='MIs7Q+qtCN6g+z9PjYoAnNxHqbbStmOHG830N8lT')
shiny::runApp('Workspace/DrugPrioritization/SMMARTdrugViz/drugViz')
runApp('Workspace/DrugPrioritization/SMMARTdrugViz/drugViz')
runApp('Workspace/DrugPrioritization/SMMARTdrugViz/drugViz')
runApp('Workspace/DrugPrioritization/SMMARTdrugViz/drugViz')
cd /Users/patterja/Workspace/DrugPrioritization/SMMARTdrugViz
setwd("/Users/patterja/Workspace/DrugPrioritization/SMMARTdrugViz")
list.files ()
setwd("/Users/patterja/Workspace/DrugPrioritization/SMMARTdrugViz/drugViz")
ls
list.files()
load("./data/auc_erlo.Rda")
load("./data/exp89.Rda")
load("./data/expEgfr.Rda")
load("./data/auc_erlo.Rda")
load("./data/exp89.Rda")
load("./data/expEgfr.Rda")
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
deployApp()
library(rsconnect)
deployApp()
runApp()
